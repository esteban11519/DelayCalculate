# Librerias
import pygad  # Libreria open-source para Algorítmos genéticos en python
import numpy as np        # Libreria para hacer operaciones matemáticas

# Se colocan las entradas y salidas deseadas


desired_output = 100000

# Función de aptitud la cual para cada solución
def fitness_func(solution, solution_idx):
    output = 8+(3*solution[0]+5)*solution[1]
    fitness = 1.0 / np.abs(output - desired_output)
    if output > desired_output:
        fitness = fitness*0.5
    return fitness

# Ahora se preparan los parámetros de PyGAD

fitness_function = fitness_func


sol_per_pop = 8
num_genes = 2

num_generations = 1000
num_parents_mating = 4


init_range_low = 1
init_range_high = 256

parent_selection_type = "sss"
keep_parents = 1

crossover_type = "single_point"

mutation_type = "random"
mutation_percent_genes = (100/num_genes)

# Se crea una instancia de la clase pygad.GA

ga_instance = pygad.GA(num_generations=num_generations,
                       num_parents_mating=num_parents_mating,
                       fitness_func=fitness_function,
                       sol_per_pop=sol_per_pop,
                       num_genes=num_genes,
                       init_range_low=init_range_low,
                       init_range_high=init_range_high,
                       parent_selection_type=parent_selection_type,
                       keep_parents=keep_parents,
                       crossover_type=crossover_type,
                       mutation_type=mutation_type,
                       gene_type=int,
                       mutation_percent_genes=mutation_percent_genes)

# La optimización se inicia con el método run()

ga_instance.run()

# Para visualizar los resultados:
solution, solution_fitness, solution_idx = ga_instance.best_solution()
print("Parameters of the best solution : {solution}".format(solution=solution))
print("Fitness value of the best solution = {solution_fitness}".format(solution_fitness=solution_fitness))

prediction = 8+(3*solution[0]+5)*solution[1]
print("Predicted output based on the best solution : {prediction}".format(prediction=prediction))
